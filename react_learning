import { render } from '@testing-library/react';
import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';

function LoginButton(props){
  return (
    <button onClick = {props.onClick}>
      Login
    </button>
  )
}

function LogoutButton(props){
  return (
    <button onClick={props.onClick}>
      Logout
    </button>
  )
}

function UserGreeting(props){
  return <h1>Welcome back!</h1>
}

function GuestGreeting(props){
  return <h1>Please sign up</h1>
}

function Greeting (props){
  const isLoggedIn = props.isLoggedIn;
  if (isLoggedIn){
    return <UserGreeting />;
  }
  return <GuestGreeting />;

  
}

class LoginControl extends React.Component{
  constructor(props){
    super(props);
    this.handleLoginClick = this.handleLoginClick.bind(this);
    this.handleLogoutClick = this.handleLogoutClick.bind(this);
    this.state = {isLoggedIn: false};
  }

  handleLoginClick(){
    this.setState({isLoggedIn:true});
  }
  handleLogoutClick(){
    this.setState({isLoggedIn:false});
  }
  render() {
    const isLoggedIn = this.state.isLoggedIn;
    let button;
    if(isLoggedIn){
      button =<LogoutButton onClick={this.handleLogoutClick} />;

    } else {
      button = <LoginButton onClick={this.handleLoginClick} />;
    }
  
  return (
    <div>
      <Greeting isLoggedIn = {isLoggedIn} />
      {button}
    </div>
  );
    
  }
}

ReactDOM.render(
    <LoginControl />,
    document.getElementById('root')
  );

// const user ={
//   firstName: 'Harper',
//   lastName: 'Perez'
// }


// const user2 ={
  
// }

// function formatName(user){
//   return user.firstName + ' '+user.lastName;
// }



// //const elementStranger = <h1>Hello, {getGreeting(user2)}</h1>
// function getGreeting( user){
//   return <h1>Hello, {formatName(user)}</h1>
// }



// function tick(){
//   const element =(
//     <div>
//      <h1>{getGreeting(user)}</h1>
//      <h1>It is {new Date().toLocaleTimeString()}.</h1>
//      </div>
//   );
//   ReactDOM.render(element, document.getElementById('root'));
//   }

  
// setInterval(tick, 1000);

// function Welcome(props){
//   return <h1>Hello, {props.name}</h1>
// }

//const element = <Welcome name="Sara"/>;




function Welcome(props){
  return <h1>Hello, {props.name}</h1>
}

function Comment(props){

  const currentdate = new Date().toLocaleDateString;
  return (
    
       
    <div>
      <div className ="Comment-text">
        {props.text}
      </div>
      <div className ="Comment-date">
        {currentdate}
      </div>

    </div>
      
   
  )
}

 function formatDate(date) {
   return date.toLocaleDateString();
 }

const comment = {
  date: new Date(),
  text: 'I hope you enjoy learning React!',
  author: {
    name: 'Hello Kitty',
    avatarUrl: 'https://placekitten.com/g/64/64',
  },
};

const currentdate = new Date().toLocaleDateString;

const hellokitty = 
<Comment text='Jesus loves me!'
 
/>;


// ReactDOM.render(
//   hellokitty,
//   document.getElementById('root')

// );
function App(){
  return (
    <div>
      

    </div>
  );
}



// function Clock(props){
//   return (
//     <div>
//       <h1>Hello, Jesus</h1>
//       <h2>It is {props.date.toLocaleTimeString()}.</h2>
//     </div>

//   );
// }

// function tick(){
//   ReactDOM.render(
//     <Clock date = {new Date()} />,
//     document.getElementById('root')

//   );

// }

// setInterval(tick, 1000);

// class Clock extends React.Component{

//   constructor(props){
//     super(props);
//     this.state = {date: new Date()};
//   }

//   componentDidMount(){
//     this.timerID = setInterval( ()=> this.tick(), 1000);
//   }

//   componentWillUnmount(){
//     clearInterval(this.timerID);
//   }

//   tick() {
//     this.setState({
//       date: new Date()
//     });
//   }
//   render(){
//     return (
//       <div>
//         <h1>Hello, Jesus!</h1>
//         <h2>It is {this.state.date.toLocaleDateString()}.</h2>
//         <h2>The time is {this.state.date.toLocaleTimeString()}.</h2>
//       </div>
//     )
//   }
// }

// ReactDOM.render(
//   <Clock />,
//   document.getElementById('root')
// );


// function ActionLink() {
//   function handleClick(e){
//     e.preventDefault();
//     console.log('The link was clicked.');
//   }
//   return (
//     < a href="#" onClick={handleClick}>
//       Click Me
//     </a>
//   )
// }

// ReactDOM.render(
//    <ActionLink />,
//    document.getElementById('root')
//  );

/*
class Toggle extends React.Component {
  constructor(props){
    super(props);
    this.state = {isToggleOn: true};
    this.handleClick = this.handleClick.bind(this);
    
  }

  handleClick(){
    this.setState(state => ({ isToggleOn: !state.isToggleOn}));
  }

  render () {
    return (<button onClick = {this.handleClick}>
      {this.state.isToggleOn ? 'ON' : 'OFF'}
      </button>);
  }

}

ReactDOM.render(
  <Toggle />,
  document.getElementById('root')
);

class WelcomeAFriend extends React.Component{
  render() {
    return <h1>Hello, {this.props.name}. Your lucky no is {this.props.luckynumber} </h1>
  }
}


ReactDOM.render(
  <WelcomeAFriend name='Jonah'  luckynumber='9' />,
  document.getElementById('root')
);

*/

function randomNumber(min, max) { 
    return Math.floor(Math.random() * (max - min) + min);
} 
  

  
// Function call


// function Clock(props){

//   return (
//     <div>
//       <h1>Hello, world!</h1>
//       <h1> Luck Number is {randomNumber(1,100)}</h1>
//       <h2>It is {props.date.toLocaleTimeString()}.</h2>
//     </div>
//   );
// }
// function tick() {
//   ReactDOM.render(
//     <Clock date = {new Date()} />,
//     document.getElementById('root')
//   );

// }

// setInterval(tick, 1000);

// class Clock extends React.Component {
//   constructor(props){
//     super(props);
//     this.state = {date: new Date()};
//   }

//   render (){
//     return (
//       <div>
//         <h1>Hello, world!</h1>
        
//         <h2>It is {this.state.date.toLocaleTimeString()}</h2>
//       </div>
//     );
//   }
// }

// function tick(){
//   ReactDOM.render(
//     <Clock />,
//     document.getElementById('root')
//   );
// }

// setInterval(tick, 1000)

// class Clock extends React.Component{
//   constructor(props){
//     super(props);
//     this.state = {date: new Date()};
//   }

//   componentDidMount(){
//     this.timerID = setInterval(
//       ()=>this.tick(),
//       1000
//     );

//   }

//   componentWillUnmount(){
//     clearInterval(this.timerID);
//   }

//   tick(){
//     this.setState({
//       date: new Date()
//     });
//   }

//   render () {
//     return (
//       <div>
//         <h1>Hello, world!</h1>
//         <h2>It is {this.state.date.toLocaleTimeString()}.</h2>
//       </div>
//     );
//   }
// }

// ReactDOM.render(
//   <Clock />,
//   document.getElementById('root')
// );

// function ActionLink() {
//   function handleClick(e) {
//     e.preventDefault();
//     console.log('The link was clicked.');
//   }

//   return (
//     <a href="#" onClick={handleClick}>
//       Click me
//     </a>
//   )
// }

// class ActionLink2 extends React.Component {
//   constructor(props) {
//     super(props);
//     this.state = {isToggleOn: true};
//     this.handleClick = this.handleClick.bind(this);
//   }

//   handleClick() {
//     this.setState(state => ({
//       isToggleOn: !state.isToggleOn
//     }));
//   }
//   render(){
//   return (
//     <button onClick= {this.handleClick}>
//       {this.state.isToggleOn ? 'ON':'OFF'}
//     </button>
//   );
//   }
// }

// ReactDOM.render(
//   <ActionLink2 />,
//   document.getElementById('root')
// );

class CountUp extends React.Component {
  constructor(props) {
    super(props);
    this.state = {count: 0};
    this.handleClick = this.handleClick.bind(this);
  }

  handleClick() {
    var new_count =this.state.count;
    new_count = new_count+1;
    this.setState(state => ({
      count: new_count
    }));
  }
  render(){
  return (
    <button onClick= {this.handleClick}>
      {this.state.count  }
    </button>
  );
  }
}

ReactDOM.render(
  <CountUp />,
  document.getElementById('root')
);


